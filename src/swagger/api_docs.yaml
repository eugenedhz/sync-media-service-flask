################################################################################
#                              API Information                                 #
################################################################################
info:
  title: 'ilow Media Service API DOCS'
  description: |
      ## USAGE

      Just scroll down to the **interactive API requests**!
      
      -----------------------------------------------

      ## REQUEST HTTP METHODS 

      - To `create` something use ***POST*** method

      - To `get` something use ***GET*** method

      - To `update` something use ***PATCH*** method

      - To `delete` something use ***DELETE*** method

      -----------------------------------------------

      <details>
        <summary> ***API ERRORS*** </summary>

        üìù **Note:** Some errors may have human-readable `description` field.
        
        | Status Code | Status Description | Message |
        | --- | --- | --- |
        | ***Global errors*** |
        | 405 | METHOD NOT ALLOWED | ***METHOD_NOT_ALLOWED*** |
        | 404 | NOT FOUND | ***RESOURCE_NOT_FOUND*** |
        | 500 | INTERNAL SERVER ERROR | ***INTERNAL_SERVER_ERROR*** |
        | 403 | FORBIDDEN | ***ADMIN_RIGHTS_REQUIRED*** |
        | ***JSON validation errors*** |
        | 400 | BAD REQUEST | ***"field_name": "MISSING_FIELD"*** |
        | 400 | BAD REQUEST | ***"field_name": "UNKNOWN_FIELD"*** |
        | 400 | BAD REQUEST | ***"field_name": "INVALID_LENGTH"*** |
        | 400 | BAD REQUEST | ***"field_name": "INVALID_RANGE"*** |
        | 400 | BAD REQUEST | ***"field_name": "REGEXP_MISMATCH"*** |
        | 400 | BAD REQUEST | ***"field_name": "INVALID_TYPE"*** |
        | 400 | BAD REQUEST | ***"field_name": "NOT_NULLABLE"*** |
        | ***Formdata errors*** |
        | 400 | BAD REQUEST | ***FORMDATA_IS_EMPTY*** |
        | ***Query params errors*** |
        | 400 | BAD REQUEST | ***INVALID_FILTER_BY*** |
        | 400 | BAD REQUEST | ***INVALID_SELECT*** |
        | 400 | BAD REQUEST | ***INVALID_EXPAND*** |
        | 400 | BAD REQUEST | ***INVALID_PAGE_QUERY*** |
        | 400 | BAD REQUEST | ***INVALID_ID*** |
        | 400 | BAD REQUEST | ***NO_IDENTITY_PROVIDED*** |
        | ***File uploading errors*** |
        | 400 | BAD REQUEST | ***INVALID_JPG*** |
        | 400 | BAD REQUEST | ***INVALID_VIDEO*** |
        | 500 | INTERNAL SERVER ERROR | ***CANNOT_SAVE_FILE_ON_SERVER*** |
        | ***Authenticaton API errors*** |
        | 401 | UNAUTHORIZED | ***NO_TOKEN_PROVIDED*** |
        | 401 | UNAUTHORIZED | ***NO_FRESH_TOKEN_PROVIDED*** |
        | 401 | UNAUTHORIZED | ***TOKEN_HAS_EXPIRED*** |
        | 422 | UNPROCESSABLE ENTITY | ***INVALID_TOKEN*** |
        | 409 | CONFLICT | ***USERNAME_ALREADY_EXISTS*** |
        | 409 | CONFLICT | ***EMAIL_ALREADY_EXISTS*** |
        | 409 | CONFLICT | ***USERNAME_NOT_FOUND*** |
        | 409 | CONFLICT | ***INCORRECT_PASSWORD*** |
        | 403 | FORBIDDEN | ***USER_IS_BANNED*** |
        | 404 | NOT FOUND | ***USER_NOT_FOUND*** |
        | ***User API errors*** |
        | 409 | CONFLICT | ***USERNAME_ALREADY_EXISTS*** |
        | 409 | CONFLICT | ***EMAIL_ALREADY_EXISTS*** |
        | 404 | NOT FOUND | ***USERS_NOT_FOUND*** |
        | 404 | NOT FOUND | ***USER_NOT_FOUND*** |
        | ***Media API errors*** |
        | 404 | NOT FOUND | ***MEDIA_NOT_FOUND*** |
        | 404 | NOT FOUND | ***MEDIAS_NOT_FOUND*** |
        | 404 | NOT FOUND | ***VIDEO_NOT_FOUND*** |
        | ***Friends API errors*** |
        | 403 | FORBIDDEN | ***CANNOT_ADD_YOURSELF*** |
        | 403 | FORBIDDEN | ***ALREADY_REQUESTED*** |
        | 404 | NOT FOUND | ***FRIEND_NOT_FOUND*** |
        | 404 | NOT FOUND | ***FRIENDS_NOT_FOUND*** |
        | 404 | NOT FOUND | ***REQUEST_NOT_FOUND*** |
        | ***Video API errors*** |
        | 404 | NOT FOUND | ***UPLOAD_SESSION_NOT_FOUND*** |
        | 404 | NOT FOUND | ***TRANSCODE_SESSION_NOT_FOUND*** |
        | 404 | NOT FOUND | ***QUALITY_NOT_FOUND*** |
        | 404 | NOT FOUND | ***VIDEO_NOT_FOUND*** |
        | 400 | BAD REQUEST | ***NO_UPLOAD_SESSION_PROVIDED*** |
        | 400 | BAD REQUEST | ***NO_QUALITY_PROVIDED*** |
        | 409 | CONFLICT | ***SIZE_MISMATCH*** |
        | ***Genres API errors*** |
        | 404 | NOT FOUND | ***GENRE_NOT_FOUND*** |
        | 404 | NOT FOUND | ***GENRES_NOT_FOUND*** |
        | 404 | NOT FOUND | ***MEDIA_GENRE_NOT_FOUND*** |
        | 404 | NOT FOUND | ***MEDIA_GENRES_NOT_FOUND*** |
        | 409 | CONFLICT | ***SLUG_ALREADY_EXISTS*** |
        | 409 | CONFLICT | ***MEDIA_GENRE_ALREADY_EXISTS*** |
        | 404 | NOT FOUND | ***VIDEO_NOT_FOUND*** |
        | ***Rooms API errors*** |
        | 404 | NOT FOUND | ***ROOM_NOT_FOUND*** |
        | 404 | NOT FOUND | ***ROOMS_NOT_FOUND*** |
        | 409 | CONFLICT | ***ROOM_NAME_ALREADY_EXISTS*** |
        | 403 | FORBIDDEN | ***CREATOR_RIGHTS_REQUIRED*** |
        | ***Media Video API errors*** |
        | 404 | NOT FOUND | ***MEDIA_VIDEO_NOT_FOUND*** |
        | 404 | NOT FOUND | ***MEDIA_VIDEOS_NOT_FOUND*** |
        | 404 | NOT FOUND | ***LANGUAGE_NOT_FOUND*** |
        | 404 | NOT FOUND | ***VIDEO_NOT_FOUND*** |
        | 409 | CONFLICT | ***MEDIA_VIDEO_SOURCE_ALREADY_EXISTS*** |
        | ***Participant API errors*** |
        | 404 | NOT FOUND | ***PARTICIPANT_NOT_FOUND*** |
        | 404 | NOT FOUND | ***PARTICIPANTS_NOT_FOUND*** |
        | ***Sockets API errors*** |
        | null | error packet | ***ACCESS_TOKEN_REQUIRED*** |
        | ***Room Sockets API errors*** |
        | null | event: 'error' | ***ROOM_NOT_FOUND*** |
        | null | event: 'error' | ***USER_ALREADY_IN_SOME_ROOM*** |
        | null | event: 'error' | ***USER_NOT_IN_ROOM*** |
        | ***Playlist Media API errors*** |
        | 404 | NOT FOUND | ***PLAYLIST_MEDIAS_NOT_FOUND*** |
        | ***Playlist Media Sockets API errors*** |
        | null | event: 'error' | ***PLAYLIST_MEDIA_NOT_FOUND*** |
        | null | event: 'error' | ***ROOM_NOT_FOUND*** |
        | null | event: 'error' | ***MEDIA_NOT_FOUND*** |
        | null | event: 'error' | ***PLAYLIST_ORDER_OUT_OF_RANGE*** |
        | null | event: 'error' | ***SAME_PLAYLIST_MEDIA_ORDER*** |
        | null | event: 'error' | ***PLAYLIST_MEDIA_ALREADY_IN_ROOM*** |
        | null | event: 'error' | ***PLAYLIST_MEDIA_ALREADY_IN_PLAYER*** |
        | ***Video Player Sockets API errors*** |
        | null | event: 'error' | ***ROOM_NOT_FOUND*** |
        | null | event: 'error' | ***USER_NOT_IN_ROOM*** |
      </details>

      -----------------------------------------------

      <details>
        <summary> ***QUERY PARAMETER: filter_by*** </summary>

        ### Reserved values:
          - boolean value: `true`, `false`

          - none value: `null`


        ### Operators (must be in {} brackets):
          - equals: `{==}`

          - not equals: `{!=}`

          - more: `{>}`

          - less: `{<}`

          - more or equals: `{>=}`

          - less or equals: `{<=}`

          - value in list: `{in}`

          - value not in list: `{!in}`

          - like operator (words or substrings in value, NOT case-sensitive): `{~}`


        ### Only for boolean operators:
          - equals: `{==}`

          - not equals: `{!=}`


        ### Only for integer/float operators:
          - equals: `{==}`

          - not equals: `{!=}`

          - more: `{>}`

          - less: `{<}`

          - more or equals: `{>=}`

          - less or equals: `{<=}`


        ### Only for list operators:
          - value in list: `{in}`

          - value not in list: `{!in}`


        ### Only for string operators:
          - equals: `{==}`

          - not equals: `{!=}`

          - more: `{>}`

          - less: `{<}`

          - more or equals: `{>=}`

          - less or equals: `{<=}`

          - like operator (words or substrings in value, NOT case-sensitive): `{~}`


        ### list syntax (for value):
        `[val1;val2;val3]`


        ### Example:
          - `filter_by=name{~}Wolf wall street,id{in}[1;2;3],isBanned{==}false`

          - `filter_by=id{>=}15,avatar{!=}null`
      </details>
      
      -----------------------------------------------

      <details>
        <summary> ***SOCKETS: client-side events*** </summary>

        Description: `event` -> `data sent with event`


        ### Connection events:

          - `connected` -> `{'userId': int}`


        ### Room events:

          - `joined` -> `Participant entity`

          - `left` -> `Participant entity`

          - `roomUpdated` -> `Room entity`

          - `roomDeleted` -> `Room entity`


        ### Chat events:

          - `messageSent` -> `{'message': string, participant: Participant entity}`


        ### Playlist events:

          - `playlistMediaAdded` -> `PlaylistMedia entity`

          - `playlistMediaUpdated` -> `PlaylistMedia entity`

          - `playlistMediaSettedToPlayer` -> `PlaylistMedia entity`

          - `playlistMediaDeleted` -> `PlaylistMedia entity`


        ### Video Player events:

          - `syncPlayerState` -> `{'currentTime': int, 'isPaused': boolean}`

          - `sendPlayerStateFromClient` -> `{'userSID': string}` (on that event client must send request to `sendPlayerStateToUser` server event)
      </details>

      -----------------------------------------------

  
  version: 'MVP 1.0.0'

  license:
    name: Nginx 1.18.0
    url: https://nginx.org/LICENSE

externalDocs:
  description: ilow Gitlab!
  url: https://gitlab.eugenv.ru

tags:
  - name: User Authentication API
    description: Do everything with authentication :)
  - name: User API
    description: Do everything with users :)
  - name: Friends API
    description: Do everything with friends :)
  - name: Rooms API
    description: Do everything with rooms :)
  - name: Participants API
    description: Do everything with participants :)
  - name: Genres API
    description: Do everything with genres :)
  - name: Media API
    description: Do everything with media :)
  - name: Video API
    description: Do everything with videos :)
  - name: Media Video API
    description: Do everything with media videos :)
  - name: Playlist Media API
    description: Do everything with room playlist :)
  - name: Sockets API
    description: Do everything with sockets :)
  - name: Room Sockets API
    description: Do everything with room sockets :)
  - name: Playlist Media Sockets API
    description: Do everything with room playlist :)
  - name: Video Player Sockets API
    description: Do everything with video-player sockets :)
  - name: Chat Sockets API
    description: Do everything with chat sockets :)

################################################################################
#                            Hosts, Servers, cookies auth                      #
################################################################################

servers: [
  {
    "url": "https://ilow-api.eugenv.ru/",
    "description": "Production server"
  },
  {
    "url": "http://127.0.0.1:8302/",
    "description": "Local server"
  }
]

################################################################################
#                                    Paths                                     #
################################################################################

paths:
  /auth/signup:
    post:
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: signup

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipnupSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å —Å access-token –∏ refresh-token –¥–ª—è cookies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /auth/login:
    post:
      summary: –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: login

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å —Å access-token –∏ refresh-token –¥–ª—è cookies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /auth/logout:
    post:
      security:
        - cookieAuth: []

      operationId: logout

      summary: –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–±—Ä–æ—Å —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ cookies.

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {logout = true}, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –∏–∑ cookies

  /auth/refresh:
    post:
      security:
        - cookieAuth: []

      operationId: refresh

      summary: –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ—á—ë—Ç —Å—Ä–æ–∫ —Å—Ç–∞—Ä–æ–≥–æ

      description: |
        –ö–æ–≥–¥–∞ `access-token` –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `refresh-token` –¥–ª—è –µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        –ï—Å–ª–∏ `refresh-token` –∏—Å—Ç–µ–∫–∞–µ—Ç: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è.

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {refresh = true}, —Å—Ç–∞–≤–∏—Ç –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ cookies

  /user/all:
    get:

      operationId: get_users

      summary: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

      tags:
        - User API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,username`
        type: string
      - in: query
        name: expand
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, `friends`, `createdRooms`.
        type: string
      - in: query
        name: filter_by
        required: false
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /user:
    patch:
      security:
        - cookieAuth: []

      operationId: update_user

      summary: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞.

      tags:
        - User API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    get:
      operationId: get_user

      summary: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,username`
        type: string
      - in: query
        name: expand
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, `friends`, `createdRooms`.
        type: string
      - in: query
        name: id
        required: false
        description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int
      - in: query
        name: username
        required: false
        description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        type: string

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_user

      summary: –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

      description: –≠—Ç–∏–º –º–æ–∂–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏ —é–∑–µ—Ä –±–µ–∑ –∞–¥–º–∏–Ω –ø—Ä–∞–≤ –∏ –∞–¥–º–∏–Ω, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

      tags:
        - User API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /friends:
    get:
      operationId: get_friends

      summary: –ü–æ–ª—É—á–∏—Ç—å –¥—Ä—É–∑–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - Friends API

      parameters:
        - in: query
          name: id
          required: true
          description: |
            id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          type: integer
        - in: query
          name: limit
          required: false
          type: integer
        - in: query
          name: offset
          required: false
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    post:
      security:
        - cookieAuth: []

      operationId: add_friend

      summary: –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥—Ä—É–∂–±—ã

      tags:
        - Friends API

      parameters:
        - in: query
          name: friend_id
          required: true
          description: |
            id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–¥—Ä—É–≥–∞
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_friend

      summary: –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥—Ä—É–∑–µ–π

      tags:
        - Friends API

      parameters:
        - in: query
          name: friend_id
          required: true
          description: |
            id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–¥—Ä—É–≥–∞
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /friends/received:
    get:
      security:
        - cookieAuth: []

      operationId: get_received_friend_requests

      summary: –ü–æ–ª—É—á–∏—Ç—å –∑–∞–ø—Ä–æ—Å—ã –≤ –¥—Ä—É–∑—å—è

      tags:
        - Friends API

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /friends/sent:
    get:
      security:
        - cookieAuth: []

      operationId: get_sent_friend_requests

      summary: –ü–æ–ª—É—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –≤ –¥—Ä—É–∑—å—è

      tags:
        - Friends API

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /friends/delete:
    delete:
      security:
        - cookieAuth: []

      operationId: delete_sent_friend_request

      summary: –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è

      tags:
        - Friends API

      parameters:
        - in: query
          name: friend_id
          required: true
          description: |
            id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–¥—Ä—É–≥–∞
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /friends/reject:
    delete:
      security:
        - cookieAuth: []

      operationId: delete_received_friend_request

      summary: –û—Ç–∫–ª–æ–Ω–∏—Ç—å –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å –≤ –¥—Ä—É–∑—å—è

      tags:
        - Friends API

      parameters:
        - in: query
          name: friend_id
          required: true
          description: |
            id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–¥—Ä—É–≥–∞
          type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /media:
    post:
      security:
        - cookieAuth: []

      summary: |
        –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Media API

      operationId: create_media

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaCreateSchema'

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ —Å–æ–∑–¥–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞

      tags:
        - Media API

      operationId: get_media

      parameters:
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –º–µ–¥–∏–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞ –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
          type: int
        - in: query
          name: expand
          required: false
          description: |
            –ø–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç—É–ø–Ω–æ: `genres`, `videos`
          type: string

      responses:
        200:
          description: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—É—â–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –º–µ–¥–∏–∞.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    patch:
      security:
        - cookieAuth: []

      operationId: update_media

      summary: |
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Media API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaUpdateSchema'

      parameters:
        - in: query
          name: id
          required: false
          description: –û–±–Ω–æ–≤–∏—Ç—å media –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
          type: int

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_media

      summary: |
        –£–¥–∞–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      description: –≠—Ç–∏–º –º–æ–∂–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–¥–º–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ–¥–∏–∞

      tags:
        - Media API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å media –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

  /media/all:
    get:

      operationId: get_medias

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ–¥–∏–∞

      tags:
        - Media API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –º–µ–¥–∏–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        type: string
      - in: query
        name: expand
        required: false
        description: |
          –ø–æ–ª—É—á–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç—É–ø–Ω–æ: `genres`, `videos`
        type: string
      - in: query
        name: genreIds
        required: false
        description: |
          –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ –∂–∞–Ω—Ä–∞–º (id —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

  /upload/session:
    get:
      security:
        - cookieAuth: []

      operationId: get_session_uuid
      summary: |
        –ü–æ–ª—É—á–∏—Ç—å uuid –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–π —Å–µ—Å—Å–∏–∏ ***ADMIN ROLE REQUIRED***
      description: –ø–æ–ª—É—á–µ–Ω–∏–µ uuid —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å (24 —á–∞—Å–∞), –æ–Ω–∞ —É–¥–∞–ª—è–µ—Ç—Å—è, –±–µ—Ä—ë—Ç—Å—è –Ω–∞ –∫–∞–∂–¥—É—é –∑–∞–≥—Ä—É–∑–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ
      tags:
        - Video API

      responses:
          200:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SessionSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: abort_session
      summary: |
        –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–æ—á–Ω—É—é —Å–µ—Å—Å–∏—é –ø–æ –µ—ë uuid ***ADMIN ROLE REQUIRED***
      tags:
        - Video API

      parameters:
      - in: query
        name: session
        required: true
        description: |
          uuid —Å–µ—Å—Å–∏–∏

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortSchema'

  /upload:
    post:
      security:
        - cookieAuth: []
      
      operationId: load_chunk
      summary: |
        –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞–Ω–∫ —Ñ–∞–π–ª–∞ ***ADMIN ROLE REQUIRED***
      tags:
        - Video API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChunkSchema'

      responses:
        200:
          description: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —á–∞–Ω–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChunkUploadedSchema'

        201:
          description: –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞–Ω–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (—Å—Ç–∞—Ç—É—Å –∫–æ–¥ —Ç–æ–∂–µ 200, —Å–≤–∞–≥–≥–µ—Ä –Ω–µ –¥–∞–ª –≤—Ç–æ—Ä–æ–π 200-–π —Å–¥–µ–ª–∞—Ç—å)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadedSchema'

  /upload/transcode_status:
    get:
      operationId: get_transcode_status
      summary: |
        –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ ***ADMIN ROLE REQUIRED***
      tags:
        - Video API

      parameters:
      - in: query
        name: session
        required: true
        description: |
          uuid –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–π —Å–µ—Å—Å–∏–∏

      responses:
        200:
          description: |
            –º–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç–∞—Ç—É—Å `expired` —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ø–æ—Å–ª–µ 24 —á–∞—Å–æ–≤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusesSchema'
  
  /room:
    post:
      security:
        - cookieAuth: []

      summary: –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

      tags:
        - Rooms API

      operationId: create_room

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoomCreateSchema'

      responses:
        200:
          description: –ö–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ—ë —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/RoomSchema'

    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

      tags:
        - Rooms API

      operationId: get_room

      parameters:
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –ø–æ id
          type: int
        - in: query
          name: name
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –ø–æ name
          type: string
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –∫–æ–º–Ω–∞—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string
        - in: query
          name: expand
          required: false
          description: |
            –î–æ–±–∞–≤–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç—É–ø–Ω–æ `creator`, `participants`, `playlistMedia`
          type: string

      responses:
        200:
          description: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—É—â–Ω–æ—Å—Ç—å –∫–æ–º–Ω–∞—Ç—ã.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomSchemaExpanded'

    patch:
      security:
        - cookieAuth: []

      operationId: update_room

      summary: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

      description: |
        —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É


        –ü—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É `roomUpdated` —Å —Å—É—â–Ω–æ—Å—Ç—å—é –∫–æ–º–Ω–∞—Ç—ã

      tags:
        - Rooms API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoomUpdateSchema'

      parameters:
        - in: query
          name: id
          required: false
          description: –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –ø–æ id
          type: int

      responses:
        200:
          description: –ö–æ–º–Ω–∞—Ç–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ—ë —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/RoomSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_room

      summary: –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã

      description: |
        –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –∫–æ–º–Ω–∞—Ç—ã –º–æ–∂–µ—Ç —É–¥–∞–ª–∏—Ç—å –µ—ë


        –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–∫–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É `roomDeleted` —Å —Å—É—â–Ω–æ—Å—Ç—å—é –∫–æ–º–Ω–∞—Ç—ã

        –∫–æ–º–Ω–∞—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ–∫–µ—Ç–æ–≤ —Ç–æ–∂–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è

      tags:
        - Rooms API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å –∫–æ–º–Ω–∞—Ç—É –ø–æ id
        type: int

      responses:
        200:
          description: –ö–æ–º–Ω–∞—Ç–∞ —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ—ë —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomSchema'

  /room/all:
    get:
      operationId: get_rooms

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã

      tags:
        - Rooms API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –∫–æ–º–Ω–∞—Ç—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        type: string
      - in: query
        name: expand
        required: false
        description: |
          –î–æ–±–∞–≤–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –¥–æ—Å—Ç—É–ø–Ω–æ `creator`, `participants`, `playlistMedia`
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomSchemaExpanded'

  /genre/all:
    get:
      operationId: get_genres

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∂–∞–Ω—Ä—ã

      tags:
        - Genres API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

  /media/genre:
    get:
      operationId: get_media_genres

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∂–∞–Ω—Ä—ã –∫–æ–Ω—Ä–µ–∫—Ç–Ω–æ–≥–æ –º–µ–¥–∏–∞

      tags:
        - Genres API
        - Media API

      parameters:
      - in: query
        name: mediaId
        required: false
        description: |
          –ø–æ–ª—É—á–∏—Ç—å –ø–æ id –º–µ–¥–∏–∞
        type: string
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

    post:
      security:
        - cookieAuth: []

      operationId: add_media_genre

      summary: |
        –î–æ–±–∞–≤–∏—Ç—å –∂–∞–Ω—Ä –∫ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Genres API
        - Media API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaGenreAddOrDeleteSchema'

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_media_genre

      summary: |
        –£–¥–∞–ª–∏—Ç—å –∂–∞–Ω—Ä –∏–∑ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Genres API
        - Media API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaGenreAddOrDeleteSchema'

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

  /genre:
    post:
      security:
        - cookieAuth: []

      summary: |
        –°–æ–∑–¥–∞–Ω–∏–µ –∂–∞–Ω—Ä–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Genres API

      operationId: create_genre

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenreCreateSchema'

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞

      tags:
        - Genres API

      operationId: get_genre

      parameters:
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ id
          type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

    patch:
      security:
        - cookieAuth: []

      operationId: update_genre

      summary: |
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Genres API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenreUpdateSchema'

      parameters:
        - in: query
          name: id
          required: false
          description: –û–±–Ω–æ–≤–∏—Ç—å –ø–æ id
          type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_genre

      summary: |
        –£–¥–∞–ª–µ–Ω–∏–µ –∂–∞–Ω—Ä–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Genres API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å –ø–æ id
        type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenreSchema'
  
  /media/video:
    post:
      security:
        - cookieAuth: []

      summary: |
        –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–µ–æ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Media Video API

      operationId: create_media_video

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaVideoCreateSchema'

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaVideoSchema'

    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∏–¥–µ–æ –º–µ–¥–∏–∞

      tags:
        - Media Video API

      operationId: get_video_media

      parameters:
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –º–µ–¥–∏–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string
        - in: query
          name: expand
          required: false
          description: |
            –î–æ–±–∞–≤–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –ø–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ `expand=media`
          type: string
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æ –ø–æ id
          type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaVideoSchema'

    patch:
      security:
        - cookieAuth: []

      operationId: update_video_media

      summary: |
        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Media Video API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MediaVideoUpdateSchema'

      parameters:
        - in: query
          name: id
          required: false
          description: –û–±–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ –ø–æ id
          type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaVideoSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_video_media

      summary: |
        –£–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ –º–µ–¥–∏–∞ ***ADMIN ROLE REQUIRED***

      tags:
        - Media Video API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å –≤–∏–¥–µ–æ –ø–æ id
        type: int

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaVideoSchema'

  /media/video/all:
    get:
      operationId: get_video_medias

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≤–∏–¥–µ–æ –º–µ–¥–∏–∞

      tags:
        - Media Video API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        type: string
      - in: query
        name: expand
        required: false
        description: |
          –î–æ–±–∞–≤–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏, –ø–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ `expand=media`
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaVideoSchema'
  
  /participants:
    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞

      tags:
        - Participants API

      operationId: get_participant

      parameters:
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –ø–æ id
          type: int
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string

      responses:
        200:
          description: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—É—â–Ω–æ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantSchema'

  /participants/all:
    get:
      operationId: get_participants

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤

      tags:
        - Participants API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        description: |
          –î–û–°–¢–£–ü–ù–û: `id`, `userId`, `roomId`
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantSchema'
  
  /connect:
    post:
      operationId: socket_connect

      summary: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–∫–µ—Ç–∞–º

      tags:
        - Sockets API

      description: |
        –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä `withCredentials: true` –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–±—ä–µ–∫—Ç–∞ `io`, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å access token.

        –ò–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è error packet —Å json `{'message': 'ACCESS_TOKEN_REQUIRED'}`
        
        –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω –∫ –¥—Ä—É–≥–æ–π —Å–æ–∫–µ—Ç —Å–µ—Å—Å–∏–∏ (–≤ –¥—Ä—É–≥–æ–º –±—Ä–∞—É–∑–µ—Ä–µ –∏–ª–∏ –≤–∫–ª–∞–¥–∫–µ),
        —Ç–æ –≤–æ —ç—Ç—É —Å–µ—Å—Å–∏—é –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è disconnect (–∏ –≤—ã—Ö–æ–¥ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∫ –Ω–µ–π –ø–æ–¥–∫–ª—é—á—ë–Ω).


      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `connected` —Å json 
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                    example: 1

  /disconnect:
    post:
      operationId: socket_disconnect

      summary: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–æ–∫–µ—Ç–æ–≤

      tags:
        - Sockets API

      description: |
        –ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ —Å–æ–±—ã—Ç–∏–∏ `dicsonnect`, –ª–∏–±–æ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É.

        –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ –≤—Å–µ—Ö –∫–æ–º–Ω–∞—Ç.

        –ü—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–º–Ω–∞—Ç—ã –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `left` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É
        —Å json —Å—É—â–Ω–æ—Å—Ç—å—é —É—á–∞—Å—Ç–Ω–∏–∫–∞.

  /join:
    post:
      operationId: join_room

      summary: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ

      description: |
        –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `joined` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é —É—á–∞—Å—Ç–Ω–∏–∫–∞

      tags:
        - Room Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomIdSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `joined` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é —É—á–∞—Å—Ç–Ω–∏–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantSchema'

  /leave:
    post:
      operationId: leave_room

      summary: –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –∫–æ–º–Ω–∞—Ç—ã

      tags:
        - Room Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomIdSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `left` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é —É—á–∞—Å—Ç–Ω–∏–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantSchema'
  
  /playlist_media/all:
    get:
      operationId: get_all_playlist_media

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞

      tags:
        - Playlist Media API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        description: |
          –î–û–°–¢–£–ü–ù–û: `id`, `mediaId`, `roomId`, `order`
        type: string
      - in: query
        name: limit
        required: false
        type: integer
      - in: query
        name: offset
        required: false
        type: integer

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistMediaSchema'

  /addPlaylistMedia:
    post:
      operationId: add_playlist_media

      summary: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞ –≤ –∫–æ–º–Ω–∞—Ç—É

      tags:
        - Playlist Media Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistMediaCreateSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `playlistMediaAdded` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistMediaSchema'

  /updatePlaylistMedia:
    post:
      operationId: update_playlist_media

      summary: –û–±–Ω–æ–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞

      tags:
        - Playlist Media Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistMediaUpdateSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `playlistMediaUpdated` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞

            order –º–æ–∂–Ω–æ c—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –±–æ–ª—å—à–µ –Ω—É–ª—è, —Ç.–∫. –Ω—É–ª–µ–≤–æ–π –ø–ª–µ–ª–∏—Å—Ç-–º–µ–¥–∏–∞ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ–º, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–≤–∏—Ç—Å—è –≤ –ø–ª–µ–µ—Ä, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ `setPlaylistMediaToPlayer`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistMediaSchema'

  /setPlaylistMediaToPlayer:
    post:
      operationId: set_to_player_playlist_media

      summary: –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞ –≤ –ø–ª–µ–µ—Ä

      tags:
        - Playlist Media Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistMediaIdSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `playlistMediaSettedToPlayer` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞

            –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞ —É–¥–∞–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥—ã–¥—É—â–∏–π –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞ —Å `order=0`

            —Ç–µ–∫—É—â–∏–π –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞, –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–≤–∏–º –≤ –ø–ª–µ–µ—Ä, —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç `order=0`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistMediaSchema'

  /deletePlaylistMedia:
    post:
      operationId: delete_playlist_media

      summary: –£–¥–∞–ª–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞

      tags:
        - Playlist Media Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaylistMediaIdSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `playlistMediaDeleted` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å—É—â–Ω–æ—Å—Ç—å—é –ø–ª–µ–π–ª–∏—Å—Ç-–º–µ–¥–∏–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistMediaSchema'
  
  /requestPlayerState:
    post:
      operationId: request_player_state

      summary: –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–µ–µ—Ä–∞

      tags:
        - Video Player Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPlayerStateSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `syncPlayerState` —Ç–æ–ª—å–∫–æ —é–∑–µ—Ä—É —Å json —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–ª–µ–µ—Ä–∞

            –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–µ –Ω–µ—Ç, –∫—Ä–æ–º–µ –Ω–∞—à–µ–≥–æ —é–∑–µ—Ä–∞, —Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ —ç—Ç–æ–º—É –∂–µ —Å–æ–±—ã—Ç–∏—é –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–µ–µ—Ä–∞: `{'currentTime': 0, 'isPaused': true}`

            –µ—Å–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏, —Ç–æ —Å–ª—É—á–∞–π–Ω–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ `sendPlayerStateFromClient` —Å –ø–æ–ª–µ–º –≤ json `userSID`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStateSchema'

  /sendPlayerStateToUser:
    post:
      operationId: send_player_state_to_user

      summary: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–ª–µ–µ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫—É

      tags:
        - Video Player Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPlayerStateToUserSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `syncPlayerState` —é–∑–µ—Ä—É –ø–æ userSID —Å json —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–ª–µ–µ—Ä–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStateSchema'

  /sendPlayerStateToEveryone:
    post:
      operationId: send_player_state_to_everyone

      summary: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–ª–µ–µ—Ä–∞ –≤—Å–µ–º –≤ –∫–æ–º–Ω–∞—Ç—É

      tags:
        - Video Player Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPlayerStateToEveryoneSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `syncPlayerState` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø–ª–µ–µ—Ä–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStateSchema'

  /sendMessage:
    post:
      operationId: send_message_to_room

      summary: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–º–Ω–∞—Ç—É

      tags:
        - Chat Sockets API

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageSendSchema'

      responses:
        200:
          description: |
            –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç emit —Å–æ–±—ã—Ç–∏—è `messageSent` –≤ —Å–æ–æ—Ç–≤. –∫–æ–º–Ω–∞—Ç—É —Å json —Å–æ–æ–±—â–µ–Ω–∏—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageSentSchema'


################################################################################
#                                    Schemas                                   #
################################################################################


components:
  schemas:
    SipnupSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: true
          example: "nick2004"
        password:
          type: string
          nullable: false
          minLength: 8
          description: |
            –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9.@_-]+$`
          required: true
          example: 'somepassword'
        email:
          type: string
          nullable: false
          minLength: 1
          required: true
          example: 'example@example.org'
        displayName:
          type: string
          nullable: false
          maxLength: 30
          minLength: 1
          description: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º
          required: true
          example: 'Lolkek'

    LoginSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: true
          example: "nick2004"

        password:
          type: string
          nullable: false
          minLength: 8
          description: |
            –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9.@_-]+$`
          required: true
          example: 'somepassword'

    UserUpdateSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: false
          example: "nick2004"
        displayName:
          type: string
          minLength: 1
          maxLength: 30
          required: false
          example: 'Lolkek'
        email:
          type: string
          required: false
          minLength: 1
          example: 'example@example.org'
        password:
          type: string
          nullable: false
          minLength: 8
          description: |
            –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9.@_-]+$`
          required: true
          example: 'somepassword'
        birthday:
          type: integer
          required: false
          min: 86400
          description: 'timestamp'
          example: 1710230677
        description:
          type: string
          required: false
          minLength: 1
          maxLength: 140
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏–∏'
        avatar:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg

    UserSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        username:
          type: string
          nullable: false
          example: 'nick2004'
        displayName:
          type: string
          nullable: false
          example: 'Lolkek'
        email:
          type: string
          nullable: false
          example: 'example@example.org'
        isBanned:
          type: boolean
          nullable: false
          example: false
        registrationDate:
          type: integer
          nullable: false
          description: 'timestamp'
          example: 1710230677
        birthday:
          type: integer
          nullable: true
          description: 'timestamp'
          example: 1710230677
        description:
          type: string
          nullable: true
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏–∏'
        avatar:
          type: string
          nullable: true
          example: '/static/images/avatar_id_1.png'
        friends:
          type: string
          nullable: true

    MediaSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: 'Titanic'
        description:
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
        thumbnail:
          type: string
          nullable: false
          example: '/static/images/thumbnail_film.png'
        preview:
          type: string
          nullable: false
          example: '/static/images/preview_film.png'
        trailer:
          type: string
          nullable: true
          example: '/static/videos/abc1.mp4'

    MediaUpdateSchema:
      type: object
      properties:
        name:
          minLength: 1
          maxLength: 50
          type: string
          nullable: false
          example: 'Titanic'
          description: –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
          required: false
        description:
          minLength: 1
          maxLength: 500
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
          required: false
        thumbnail:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg. –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
        preview:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg. –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
        trailer:
          minLength: 3
          required: false
          type: string
          nullable: false
          example: 'abc1.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`

    MediaCreateSchema:
      type: object
      properties:
        name:
          minLength: 1
          maxLength: 50
          type: string
          nullable: false
          example: 'Titanic'
          required: true
        description:
          minLength: 1
          maxLength: 500
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
          required: true
        thumbnail:
          nullable: false
          required: true
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg
        preview:
          nullable: false
          required: true
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg
        trailer:
          minLength: 3
          required: false
          type: string
          nullable: false
          example: 'abc1.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`

    ChunkSchema:
      type: object
      properties:
        session:
          type: string
          nullable: false
          required: true
          description: |
            –ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å uuid —Å–µ—Å—Å–∏–∏ `(/upload/session [GET])`
        totalFileSize:
          type: integer
          nullable: false
          required: true
          min: 1
        totalChunkCount:
          type: integer
          nullable: false
          required: true
          min: 1
        chunkIndex:
          type: integer
          nullable: false
          required: true
          min: 0
        chunkByteOffset:
          type: integer
          nullable: false
          required: true
          min: 0
        chunk:
          type: string
          format: binary
          required: true
          nullable: false
          description: |
            —Ñ–∞–π–ª —á–∞–Ω–∫–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: `.mp4`, `.mov`, `.avi`, `.m4v`, `.mkv`

    SessionSchema:
      type: object
      properties:
        session:
          type: string
          nullable: false
          example: jrj2rij2oriej23i324
          description: uuid —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏

    ChunkUploadedSchema:
      type: object
      properties:
        chunkUploaded:
          type: integer
          nullable: false
          example: 0
          description: –∏–Ω–¥–µ–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —á–∞–Ω–∫–∞

    FileUploadedSchema:
      type: object
      properties:
        video:
          type: string
          nullable: false
          example: video.mp4
          description: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞–Ω–∫–∞

    AbortSchema:
      type: object
      properties:
        aborted:
          type: string
          nullable: false
          example: jrj2rij2oriej23i324
          description: uuid –æ—Ç–º–µ–Ω—ë–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏

    StatusesSchema:
      type: object
      description: |
        –º–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç–∞—Ç—É—Å `expired` —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–∑–∞–¥ –∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–µ—Å—Å–∏–∏
      properties:
        360p:
          type: string
          nullable: false
          example: success
          description: —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        480p:
          type: string
          nullable: false
          example: error
          description: —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å –æ—à–∏–±–∫–æ–π
        720p:
          type: string
          nullable: false
          example: processing
          description: —Å—Ç–∞—Ç—É—Å –∏–¥—É—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        1080p:
          type: string
          nullable: false
          example: pending
          description: —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞

    GenreSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: '–£–∂–∞—Å—ã'
        slug:
          type: string
          nullable: false
          example: 'horror'

    GenreCreateSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          required: true
          example: '–£–∂–∞—Å—ã'
          minLength: 2
          description: |
            –∏–º–µ–µ—Ç regexp `^[–ê-–Ø]{1}[–∞-—è]+$`
        slug:
          type: string
          required: true
          nullable: false
          example: 'horror'
          minLength: 2
          description: |
            –∏–º–µ–µ—Ç regexp `^[a-z]+$`

    GenreUpdateSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          required: false
          example: '–£–∂–∞—Å—ã'
          minLength: 2
          description: |
            –∏–º–µ–µ—Ç regexp `^[–ê-–Ø]{1}[–∞-—è]+$`
        slug:
          type: string
          required: false
          nullable: false
          example: 'horror'
          minLength: 2
          description: |
            –∏–º–µ–µ—Ç regexp `^[a-z]+$`

    MediaGenreAddOrDeleteSchema:
      type: object
      properties:
        mediaId:
          type: integer
          nullable: false
          required: true
          example: 1
        genreId:
          type: integer
          nullable: false
          required: true
          example: 1
    
    RoomSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        creatorId:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: 'Room_1'
        title:
          type: string
          nullable: false
          example: '–∫–æ–º–Ω–∞—Ç–∞ –∂–µ–Ω–∏'
        isPrivate:
          type: boolean
          nullable: false
          example: false
        cover:
          type: string
          nullable: true
          example: '/static/images/cover.jpg'

    RoomSchemaExpanded:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        creatorId:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: 'Room_1'
        title:
          type: string
          nullable: false
          example: '–∫–æ–º–Ω–∞—Ç–∞ –∂–µ–Ω–∏'
        isPrivate:
          type: boolean
          nullable: false
          example: false
        cover:
          type: string
          nullable: true
          example: '/static/images/cover.jpg'
        creator:
          $ref: '#/components/schemas/UserSchema'
          required: false

    RoomCreateSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          example: 'Room_1'
          minLength: 1
          maxLength: 30
          description: |
            —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è, `regexp = ^[A-Za-z0-9_]+$`
          required: true
        title:
          type: string
          nullable: false
          example: '–∫–æ–º–Ω–∞—Ç–∞ –∂–µ–Ω–∏'
          minLength: 1
          maxLength: 20
          required: true
        isPrivate:
          type: boolean
          nullable: false
          example: false
          required: true
        cover:
          type: string
          format: binary
          required: false
          nullable: false
          description: —Ñ–æ—Ä–º–∞—Ç .jpg

    RoomUpdateSchema:
      type: object
      properties:
        name:
          type: string
          nullable: false
          example: 'Room_1'
          minLength: 1
          maxLength: 30
          description: |
            —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è, `regexp = ^[A-Za-z0-9_]+$`
          required: false
        title:
          type: string
          nullable: false
          example: '–∫–æ–º–Ω–∞—Ç–∞ –∂–µ–Ω–∏'
          minLength: 1
          maxLength: 20
          required: false
        isPrivate:
          type: boolean
          nullable: false
          example: false
          required: false
        cover:
          type: string
          format: binary
          required: false
          nullable: false
          description: —Ñ–æ—Ä–º–∞—Ç .jpg

    MediaVideoSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        mediaId:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: 'Titanic (Lostfim)'
        source:
          type: string
          nullable: false
          example: 'source.mp4'
        language:
          type: string
          nullable: false
          example: 'RU'

    MediaVideoCreateSchema:
      type: object
      properties:
        mediaId:
          type: integer
          nullable: false
          required: true
          example: 1
        name:
          minLength: 1
          type: string
          nullable: false
          required: true
          example: 'Titanic (Lostfim)'
        source:
          minLength: 3
          required: true
          type: string
          nullable: false
          example: 'source.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`
        language:
          type: string
          minLength: 2
          maxLength: 2
          required: true
          nullable: false
          example: 'RU'
          description: |
            –¥–≤—É—Ö–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –¥–ª—è —è–∑—ã–∫–∞, –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ, —Ç–∞–∫–∂–µ `regexp = ^[A-Z]{2}$`

    MediaVideoUpdateSchema:
      type: object
      properties:
        name:
          minLength: 1
          type: string
          nullable: false
          required: false
          example: 'Titanic (Lostfim)'
        source:
          minLength: 3
          required: false
          type: string
          nullable: false
          example: 'source.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`
        language:
          type: string
          minLength: 2
          maxLength: 2
          required: false
          nullable: false
          example: 'RU'
          description: |
            –¥–≤—É—Ö–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –¥–ª—è —è–∑—ã–∫–∞, –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ, —Ç–∞–∫–∂–µ `regexp = ^[A-Z]{2}$`
    
    ParticipantSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        roomId:
          type: integer
          nullable: false
          example: 1
        userId:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: "User's displayName"
        avatar:
          type: string
          nullable: true
          example: '/static/images/j23jro23uo4i2rt4kjfr.jpg'
    
    RoomIdSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
    
    PlaylistMediaSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
        mediaId:
          type: integer
          nullable: false
          example: 1
        order:
          type: integer
          nullable: false
          example: 0
        name:
          type: string
          nullable: false
          example: 'media name'
        thumbnail:
          type: string
          nullable: false
          example: '/static/images/j23jro23uo4i2rt4kjfr.jpg'

    PlaylistMediaCreateSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
          required: true
        mediaId:
          type: integer
          nullable: false
          example: 1
          required: true

    PlaylistMediaUpdateSchema:
      type: object
      properties:
        playlistMediaId:
          type: integer
          nullable: false
          example: 1
          required: true
          min: 1
        order:
          type: integer
          nullable: false
          example: 1
          required: true
          min: 1

    PlaylistMediaIdSchema:
      type: object
      properties:
        playlistMediaId:
          type: integer
          nullable: false
          example: 1
          required: true
          min: 1

    PlayerStateSchema:
      type: object
      properties:
        currentTime:
          type: integer
          nullable: false
          example: 0
          min: 0
        isPaused:
          type: boolean
          nullable: false
          example: true

    SendPlayerStateToUserSchema:
      type: object
      properties:
        userSID:
          type: string
          nullable: false
          example: 'wefFedkDLl'
          minLength: 1
          required: true
        currentTime:
          type: integer
          nullable: false
          example: 0
          min: 0
          required: true
        isPaused:
          type: boolean
          nullable: false
          example: true
          required: true

    SendPlayerStateToEveryoneSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
          min: 1
          required: true
        currentTime:
          type: integer
          nullable: false
          example: 0
          min: 0
          required: true
        isPaused:
          type: boolean
          nullable: false
          example: true
          required: true

    RequestPlayerStateSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
          min: 1
          required: true

    MessageSendSchema:
      type: object
      properties:
        roomId:
          type: integer
          nullable: false
          example: 1
          min: 1
          required: true   
        message:
          type: string
          nullable: false
          example: 'hello world!'
          minLength: 1
          required: true 

    MessageSentSchema:
      type: object
      properties:  
        message:
          type: string
          nullable: false
          example: 'hello world!'
          minLength: 1
        participant:
          $ref: '#/components/schemas/ParticipantSchema'
