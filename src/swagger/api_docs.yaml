################################################################################
#                              API Information                                 #
################################################################################
info:
  title: 'ilow Media Service API DOCS'
  description: |
      ## FOR USAGE

      Just scroll down to the **interactive API requests**!

      If any not understandable `errors` occur, contact ***@Eugene Toropkin***

      -----------------------------------------------
        
      üìù **Note:** Log in as an ***administrator*** or ***user*** before making requests marked with a padlock üîí

      Before login, sign up as an ***administrator*** or ***user*** in case you dont have admin username and password.

      Check the **Authenticaton API** requests for those purposes.
      
      -----------------------------------------------

      ## REQUEST HTTP METHODS 

      - To `create` something use ***POST*** method

      - To `get` something use ***GET*** method

      - To `update` something use ***PATCH*** method

      - To `delete` something use ***DELETE*** method

      -----------------------------------------------

      ## TABLE OF ***ERRORS*** THAT API MAY RETURN
        
      | Status Code | Description | Message |
      | --- | --- | --- |
      | ***Global errors*** |
      | 405 | METHOD NOT ALLOWED | ***METHOD_NOT_ALLOWED*** |
      | 404 | NOT FOUND | ***RESOURCE_NOT_FOUND*** |
      | ***Authenticaton API errors*** |
      | 400 | BAD REQUEST | ***NO_SIGNUP_DATA_PROVIDED*** |
      | 400 | BAD REQUEST | ***NO_LOGIN_DATA_PROVIDED*** |
      | 400 | BAD REQUEST | ***INVALID_PHONE_NUMBER*** |
      | 400 | BAD REQUEST | ***INVALID_OTP_CODE*** |+
      | 409 | CONFLICT | ***INVALID_LOGIN_OR_PASSWORD*** |
      | 409 | CONFLICT | ***ADMIN_ALREADY_EXISTS*** |
      | 409 | CONFLICT | ***ADMIN_DOESNT_EXIST*** |
      | 401 | UNAUTHORIZED | ***NO_TOKEN_PROVIDED*** |
      | 401 | UNAUTHORIZED | ***NO_FRESH_TOKEN_PROVIDED*** |
      | 401 | UNAUTHORIZED | ***TOKEN_HAS_EXPIRED*** |
      | 422 | UNPROCESSABLE ENTITY | ***INVALID_TOKEN*** |
      | 403 | FORBIDDEN | ***ADMIN_RIGHTS_REQUIRED*** |
      | ***Query params errors*** |
      | 400 | BAD REQUEST | ***UNKNOWN_QUERY_PARAM*** |
      | 400 | BAD REQUEST | ***INVALID_SORT_VALUE*** |
      | 400 | BAD REQUEST | ***INVALID_EXPAND_VALUE*** |
      | 400 | BAD REQUEST | ***INVALID_EXPAND_VALUE_PARAMETER*** |
      | 400 | BAD REQUEST | ***INVALID_SELECT_FIELD*** |
      | ***JSON validation errors*** |
      | 400 | BAD REQUEST | ***"field_name": "MISSING_DATA"*** |
      | 400 | BAD REQUEST | ***"field_name": "UNKNOWN_FIELD"*** |
      | 400 | BAD REQUEST | ***"field_name": "INVALID_LENGTH"*** |
      | 400 | BAD REQUEST | ***"field_name": "INVALID_TYPE"*** |
      | 400 | BAD REQUEST | ***"field_name": "NOT_NULLABLE"*** |

      -----------------------------------------------

  
  version: 'beta 0.0.1'

  contact:
    url: https://vk.com/akumii
    email: toropkibn@gmail.com

  license:
    name: Nginx 1.18.0
    url: https://nginx.org/LICENSE

externalDocs:
  description: ilow Gitlab!
  url: https://gitlab.eugenv.ru

tags:
  - name: User Authentication API
    description: Do everything with authentication :)
  - name: User API
    description: Do everything with users :)
  - name: Media API
    description: Do everything with media :)
  - name: Rooms API
    description: Do everything with rooms :)

################################################################################
#                            Hosts, Servers, cookies auth                      #
################################################################################

servers: [
  {
    "url": "https://ilow-api.eugenv.ru/",
    "description": "Development server"
  },
  {
    "url": "http://127.0.0.1:8302/",
    "description": "Local server"
  },
  {
    "url": "No production server is present...",
  }
]

################################################################################
#                                    Paths                                     #
################################################################################

paths:
  /user/signup:
    post:
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: signup

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipnupSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /user/login:
    post:
      summary: –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: login

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /logout:
    post:
      security:
        - cookieAuth: []

      operationId: logout

      summary: –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–±—Ä–æ—Å cookies

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {logout = true}, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –∏–∑ cookies

  /refresh:
    post:
      security:
        - cookieAuth: []

      operationId: logout

      summary: –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ—á—ë—Ç —Å—Ä–æ–∫ —Å—Ç–∞—Ä–æ–≥–æ

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {refresh = true}, —Å—Ç–∞–≤–∏—Ç –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ cookies


  /user:
    delete:
      security:
        - cookieAuth: []

      operationId: delete_user

      summary: –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ —é–∑–µ—Ä —Å–æ —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞

      tags:
        - User API

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'


################################################################################
#                                    Schemas                                   #
################################################################################


components:
  schemas:
    SipnupSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 1
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          required: true
          example: "nick2004"
        password:
          type: string
          nullable: false
          minLength: 1
          required: true
          example: 'pwd'
        email:
          type: string
          nullable: false
          minLength: 1
          required: true
          example: 'example@example.org'
        displayName:
          type: string
          nullable: false
          maxLength: 30
          minLength: 1
          description: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º
          required: true
          example: 'Lolkek'

    LoginSchema:
      type: object
      properties:
        username:
          required: true
          nullable: false
          type: string
          maxLength: 30
          minLength: 1
          description: –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          example: 'nick2004'

        password:
          required: true
          nullable: false
          type: string
          minLength: 1
          example: 'pwd'

    User:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        username:
          type: string
          nullable: false
          example: 'nick2004'
        displayName:
          type: string
          nullable: false
          example: 'Lolkek'
        email:
          type: string
          nullable: false
          example: 'example@example.org'
        isBanned:
          type: boolean
          nullable: false
          example: false
        registrationDate:
          type: string
          nullable: false
        birthday:
          type: string
          required: true
        description:
          type: string
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏–∏'
          required: true
        avatar:
          type: string
          required: true
          example: 'ilow-api.eugenv.ru/static/images/avatar_id_1.png'