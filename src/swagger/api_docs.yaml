################################################################################
#                              API Information                                 #
################################################################################
info:
  title: 'ilow Media Service API DOCS'
  description: |
      ## USAGE

      Just scroll down to the **interactive API requests**!
      
      -----------------------------------------------

      ## REQUEST HTTP METHODS 

      - To `create` something use ***POST*** method

      - To `get` something use ***GET*** method

      - To `update` something use ***PATCH*** method

      - To `delete` something use ***DELETE*** method

      -----------------------------------------------

      ## ***API ERRORS***

      üìù **Note:** Some errors may have human-readable `description` field.
      
      | Status Code | Status Description | Message |
      | --- | --- | --- |
      | ***Global errors*** |
      | 405 | METHOD NOT ALLOWED | ***METHOD_NOT_ALLOWED*** |
      | 404 | NOT FOUND | ***RESOURCE_NOT_FOUND*** |
      | 500 | INTERNAL SERVER ERROR | ***INTERNAL_SERVER_ERROR*** |
      | 403 | FORBIDDEN | ***ADMIN_RIGHTS_REQUIRED*** |
      | ***JSON validation errors*** |
      | 400 | BAD REQUEST | ***"field_name": "MISSING_FIELD"*** |
      | 400 | BAD REQUEST | ***"field_name": "UNKNOWN_FIELD"*** |
      | 400 | BAD REQUEST | ***"field_name": "INVALID_LENGTH"*** |
      | 400 | BAD REQUEST | ***"field_name": "INVALID_RANGE"*** |
      | 400 | BAD REQUEST | ***"field_name": "REGEXP_MISMATCH"*** |
      | 400 | BAD REQUEST | ***"field_name": "INVALID_TYPE"*** |
      | 400 | BAD REQUEST | ***"field_name": "NOT_NULLABLE"*** |
      | ***Formdata errors*** |
      | 400 | BAD REQUEST | ***FORMDATA_IS_EMPTY*** |
      | ***Query params errors*** |
      | 400 | BAD REQUEST | ***INVALID_FILTER_BY*** |
      | 400 | BAD REQUEST | ***INVALID_SELECT*** |
      | 400 | BAD REQUEST | ***INVALID_ID*** |
      | 400 | BAD REQUEST | ***NO_IDENTITY_PROVIDED*** |
      | ***File uploading errors*** |
      | 400 | BAD REQUEST | ***INVALID_JPG*** |
      | 500 | INTERNAL SERVER ERROR | ***CANNOT_SAVE_FILE_ON_SERVER*** |
      | ***Authenticaton API errors*** |
      | 401 | UNAUTHORIZED | ***NO_TOKEN_PROVIDED*** |
      | 401 | UNAUTHORIZED | ***NO_FRESH_TOKEN_PROVIDED*** |
      | 401 | UNAUTHORIZED | ***TOKEN_HAS_EXPIRED*** |
      | 422 | UNPROCESSABLE ENTITY | ***INVALID_TOKEN*** |
      | 409 | CONFLICT | ***USERNAME_ALREADY_EXISTS*** |
      | 409 | CONFLICT | ***EMAIL_ALREADY_EXISTS*** |
      | 409 | CONFLICT | ***USERNAME_NOT_FOUND*** |
      | 409 | CONFLICT | ***INCORRECT_PASSWORD*** |
      | 403 | FORBIDDEN | ***USER_IS_BANNED*** |
      | 404 | NOT FOUND | ***USER_NOT_FOUND*** |
      | ***User API errors*** |
      | 409 | CONFLICT | ***USERNAME_ALREADY_EXISTS*** |
      | 409 | CONFLICT | ***EMAIL_ALREADY_EXISTS*** |
      | 404 | NOT FOUND | ***USERS_NOT_FOUND*** |
      | 404 | NOT FOUND | ***USER_NOT_FOUND*** |
      | ***Media API errors*** |
      | 404 | NOT FOUND | ***MEDIA_NOT_FOUND*** |
      | 404 | NOT FOUND | ***MEDIAS_NOT_FOUND*** |

      -----------------------------------------------
  
  version: 'beta 0.0.1'

  contact:
    url: https://vk.com/akumii
    email: toropkibn@gmail.com

  license:
    name: Nginx 1.18.0
    url: https://nginx.org/LICENSE

externalDocs:
  description: ilow Gitlab!
  url: https://gitlab.eugenv.ru

tags:
  - name: User Authentication API
    description: Do everything with authentication :)
  - name: User API
    description: Do everything with users :)
  - name: Media API
    description: Do everything with media :)
  - name: Video API
    description: Do everything with videos :)
  - name: Rooms API
    description: Do everything with rooms :)

################################################################################
#                            Hosts, Servers, cookies auth                      #
################################################################################

servers: [
  {
    "url": "https://ilow-api.eugenv.ru/",
    "description": "Development server"
  },
  {
    "url": "http://127.0.0.1:8302/",
    "description": "Local server"
  },
  {
    "url": "No production server is present...",
  }
]

################################################################################
#                                    Paths                                     #
################################################################################

paths:
  /auth/signup:
    post:
      summary: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: signup

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipnupSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å —Å access-token –∏ refresh-token –¥–ª—è cookies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /auth/login:
    post:
      summary: –õ–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User Authentication API

      operationId: login

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–∏–ª—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å —Å access-token –∏ refresh-token –¥–ª—è cookies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /auth/logout:
    post:
      security:
        - cookieAuth: []

      operationId: logout

      summary: –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Å–±—Ä–æ—Å —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ cookies.

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {logout = true}, —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Ç–æ–∫–µ–Ω—ã –∏–∑ cookies

  /auth/refresh:
    post:
      security:
        - cookieAuth: []

      operationId: refresh

      summary: –ó–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω, –∫–æ–≥–¥–∞ –∏—Å—Ç–µ—á—ë—Ç —Å—Ä–æ–∫ —Å—Ç–∞—Ä–æ–≥–æ

      description: |
        –ö–æ–≥–¥–∞ `access-token` –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å—Ç–µ–∫–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `refresh-token` –¥–ª—è –µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
        –ï—Å–ª–∏ `refresh-token` –∏—Å—Ç–µ–∫–∞–µ—Ç: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–Ω–æ–≤–æ –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è.

      tags:
        - User Authentication API

      responses:
        200:
          description: –í—ã–≤–æ–¥–∏—Ç {refresh = true}, —Å—Ç–∞–≤–∏—Ç –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω –≤ cookies

  /user/all:
    get:

      operationId: get_users

      summary: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

      description: –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.

      tags:
        - User API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,username`
        type: string
      - in: query
        name: filter_by
        required: false
        description: |
          –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä `filter_by=displayName=Sasha,isBanned=false,avatar=null`.
        type: string

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /user:
    patch:
      security:
        - cookieAuth: []

      operationId: update_user

      summary: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞.

      tags:
        - User API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateSchema'

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    get:
      operationId: get_user

      summary: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      tags:
        - User API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,username`
        type: string
      - in: query
        name: id
        required: false
        description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int
      - in: query
        name: username
        required: false
        description: –ü–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username
        type: string

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_user

      summary: –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

      description: –≠—Ç–∏–º –º–æ–∂–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∏ —é–∑–µ—Ä –±–µ–∑ –∞–¥–º–∏–Ω –ø—Ä–∞–≤ –∏ –∞–¥–º–∏–Ω, –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

      tags:
        - User API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int

      responses:
        200:
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSchema'

  /media:
    post:
      security:
        - cookieAuth: []

      summary: –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–¥–∏–∞

      tags:
        - Media API

      operationId: create_media

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaCreateSchema'

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ —Å–æ–∑–¥–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    get:
      summary: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞

      tags:
        - Media API

      operationId: get_media

      parameters:
        - in: query
          name: select
          required: false
          description: |
            –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –º–µ–¥–∏–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
          type: string
        - in: query
          name: id
          required: false
          description: –ü–æ–ª—É—á–∏—Ç—å –º–µ–¥–∏–∞ –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
          type: int

      responses:
        200:
          description: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—É—â–Ω–æ—Å—Ç—å –æ–±—ä–µ–∫—Ç–∞ –º–µ–¥–∏–∞.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    patch:
      security:
        - cookieAuth: []

      operationId: update_media

      summary: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞.

      tags:
        - Media API

      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MediaUpdateSchema'

      parameters:
        - in: query
          name: id
          required: false
          description: –û–±–Ω–æ–≤–∏—Ç—å media –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
          type: int

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/MediaSchema'

    delete:
      security:
        - cookieAuth: []

      operationId: delete_media

      summary: –£–¥–∞–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞.

      description: –≠—Ç–∏–º –º–æ–∂–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∞–¥–º–∏–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –º–µ–¥–∏–∞

      tags:
        - Media API

      parameters:
      - in: query
        name: id
        required: false
        description: –£–¥–∞–ª–∏—Ç—å media –ø–æ id, –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ id=—á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –≤—ã–≤–µ–¥–µ—Ç –æ—à–∏–±–∫—É.
        type: int

      responses:
        200:
          description: –û–±—ä–µ–∫—Ç –º–µ–¥–∏–∞ —É–¥–∞–ª—è–µ—Ç—Å—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –µ–≥–æ —Å—É—â–Ω–æ—Å—Ç—å.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

  /media/all:
    get:

      operationId: get_medias

      summary: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ–¥–∏–∞

      description: –ï—Å–ª–∏ –º–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫.

      tags:
        - Media API

      parameters:
      - in: query
        name: select
        required: false
        description: |
          –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—è –º–µ–¥–∏–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä `select=id,name`
        type: string
      - in: query
        name: filter_by
        required: false
        description: |
          –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –º–µ–¥–∏–∞ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ–ª–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä `filter_by=name=–ë–∞—Ä–±–∏,description=–ü–æ—á–µ–º—É –≤—Å—ë —Ä–æ–∑–æ–≤–æ–µ`.
        type: string

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSchema'

  /upload/session:
    get:
      operationId: get_session_uuid
      summary: –ü–æ–ª—É—á–∏—Ç—å uuid –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–π —Å–µ—Å—Å–∏–∏
      description: –ø–æ–ª—É—á–µ–Ω–∏–µ uuid —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å, –æ–Ω–∞ —É–¥–∞–ª—è–µ—Ç—Å—è, –±–µ—Ä—ë—Ç—Å—è –Ω–∞ –∫–∞–∂–¥—É—é –∑–∞–≥—Ä—É–∑–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ
      tags:
        - Video API

      responses:
          200:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SessionSchema'

    delete:
      operationId: abort_session
      summary: –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–æ—á–Ω—É—é —Å–µ—Å—Å–∏—é –ø–æ –µ—ë uuid
      tags:
        - Video API

      parameters:
      - in: query
        name: session
        required: true
        description: |
          uuid —Å–µ—Å—Å–∏–∏

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbortSchema'

  /upload:
    post:
      operationId: load_chunk
      summary: –∑–∞–≥—Ä—É–∑–∏—Ç—å —á–∞–Ω–∫ —Ñ–∞–π–ª–∞
      tags:
        - Video API

      requestBody:
        required: true
        description: –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π JSON
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChunkSchema'

      responses:
        200:
          description: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —á–∞–Ω–∫–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChunkUploadedSchema'

        201:
          description: –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞–Ω–∫–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (—Å—Ç–∞—Ç—É—Å –∫–æ–¥ —Ç–æ–∂–µ 200, –ø—Ä–æ—Å—Ç–æ —Å–≤–∞–≥–≥–µ—Ä –Ω–µ –¥–∞–ª –µ—â—ë –≤—Ç–æ—Ä–æ–π —Å–¥–µ–ª–∞—Ç—å)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadedSchema'

  /upload/transcode_status:
    get:
      operationId: get_transcode_status
      summary: –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ
      tags:
        - Video API

      parameters:
      - in: query
        name: session
        required: true
        description: |
          uuid –∑–∞–≥—Ä—É–∑–æ—á–Ω–æ–π —Å–µ—Å—Å–∏–∏

      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusesSchema'


################################################################################
#                                    Schemas                                   #
################################################################################


components:
  schemas:
    SipnupSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: true
          example: "nick2004"
        password:
          type: string
          nullable: false
          minLength: 8
          description: |
            –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9.@_-]+$`
          required: true
          example: 'somepassword'
        email:
          type: string
          nullable: false
          minLength: 1
          required: true
          example: 'example@example.org'
        displayName:
          type: string
          nullable: false
          maxLength: 30
          minLength: 1
          description: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–∏–º
          required: true
          example: 'Lolkek'

    LoginSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: true
          example: "nick2004"

        password:
          type: string
          nullable: false
          minLength: 8
          description: |
            –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9.@_-]+$`
          required: true
          example: 'somepassword'

    UserUpdateSchema:
      type: object
      properties:
        username:
          type: string
          nullable: false
          maxLength: 30
          minLength: 5
          description: |
            –£–Ω–∏–∫–∞–ª—å–Ω—ã–π username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º–µ–µ—Ç `regexp = ^[a-zA-Z0-9._-]+$`
          required: false
          example: "nick2004"
        displayName:
          type: string
          minLength: 1
          maxLength: 30
          required: false
          example: 'Lolkek'
        email:
          type: string
          required: false
          minLength: 1
          example: 'example@example.org'
        birthday:
          type: integer
          required: false
          min: 86400
          description: 'timestamp'
          example: 1710230677
        description:
          type: string
          required: false
          minLength: 1
          maxLength: 140
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏–∏'
        avatar:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg

    UserSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        username:
          type: string
          nullable: false
          example: 'nick2004'
        displayName:
          type: string
          nullable: false
          example: 'Lolkek'
        email:
          type: string
          nullable: false
          example: 'example@example.org'
        isBanned:
          type: boolean
          nullable: false
          example: false
        registrationDate:
          type: integer
          nullable: false
          description: 'timestamp'
          example: 1710230677
        birthday:
          type: integer
          nullable: true
          description: 'timestamp'
          example: 1710230677
        description:
          type: string
          nullable: true
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—á–∫–∏–∏'
        avatar:
          type: string
          nullable: true
          example: '/static/images/avatar_id_1.png'

    MediaSchema:
      type: object
      properties:
        id:
          type: integer
          nullable: false
          example: 1
        name:
          type: string
          nullable: false
          example: 'Titanic'
        description:
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
        thumbnail:
          type: string
          nullable: false
          example: '/static/images/thumbnail_film.png'
        preview:
          type: string
          nullable: false
          example: '/static/images/preview_film.png'
        trailer:
          type: string
          nullable: true
          example: '/static/videos/abc1.mp4'

    MediaUpdateSchema:
      type: object
      properties:
        name:
          minLength: 1
          maxLength: 50
          type: string
          nullable: false
          example: 'Titanic'
          description: –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
          required: false
        description:
          minLength: 1
          maxLength: 200
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
          required: false
        thumbnail:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg. –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
        preview:
          required: false
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg. –ü—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
        trailer:
          minLength: 3
          required: false
          type: string
          nullable: false
          example: 'abc1.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`

    MediaCreateSchema:
      type: object
      properties:
        name:
          minLength: 1
          maxLength: 50
          type: string
          nullable: false
          example: 'Titanic'
          required: true
        description:
          minLength: 1
          maxLength: 200
          type: string
          nullable: false
          example: '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞'
          required: true
        thumbnail:
          nullable: false
          required: true
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg
        preview:
          nullable: false
          required: true
          type: string
          format: binary
          description: —Ç–æ–ª—å–∫–æ .jpg
        trailer:
          minLength: 3
          required: false
          type: string
          nullable: false
          example: 'abc1.mp4'
          description: |
            –í –ø–æ–ª–µ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º. `regexp = ^[0-9a-z]+\.[a-z0-9]+$`

    ChunkSchema:
      type: object
      properties:
        session:
          type: string
          nullable: false
          required: true
          description: |
            –ü–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å uuid —Å–µ—Å—Å–∏–∏ `(/upload/session [GET])`
        totalFileSize:
          type: integer
          nullable: false
          required: true
          min: 1
        totalChunkCount:
          type: integer
          nullable: false
          required: true
          min: 1
        chunkIndex:
          type: integer
          nullable: false
          required: true
          min: 0
        chunkByteOffset:
          type: integer
          nullable: false
          required: true
          min: 0
        chunk:
          type: string
          format: binary
          required: true
          nullable: false
          description: |
            —Ñ–∞–π–ª —á–∞–Ω–∫–∞, –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: `.mp4`, `.mov`, `.avi`, `.m4v`

    SessionSchema:
      type: object
      properties:
        session:
          type: string
          nullable: false
          example: jrj2rij2oriej23i324
          description: uuid —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏

    ChunkUploadedSchema:
      type: object
      properties:
        chunkUploaded:
          type: integer
          nullable: false
          example: 0
          description: –∏–Ω–¥–µ–∫—Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —á–∞–Ω–∫–∞

    FileUploadedSchema:
      type: object
      properties:
        video:
          type: string
          nullable: false
          example: video.mp4
          description: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–º—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞–Ω–∫–∞

    AbortSchema:
      type: object
      properties:
        aborted:
          type: string
          nullable: false
          example: jrj2rij2oriej23i324
          description: uuid –æ—Ç–º–µ–Ω—ë–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏

    StatusesSchema:
      type: object
      description: |
        –º–æ–∂–µ—Ç —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç–∞—Ç—É—Å `expired` —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –µ—Å–ª–∏ –æ–Ω–∏ –±—ã–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞–∑–∞–¥ –∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–µ—Å—Å–∏–∏
      properties:
        360p:
          type: string
          nullable: false
          example: success
          description: —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        480p:
          type: string
          nullable: false
          example: error
          description: —Å—Ç–∞—Ç—É—Å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å –æ—à–∏–±–∫–æ–π
        720p:
          type: string
          nullable: false
          example: processing
          description: —Å—Ç–∞—Ç—É—Å –∏–¥—É—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
        1080p:
          type: string
          nullable: false
          example: pending
          description: —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
